/*
Deployment script for JokesDb

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "JokesDb"
:setvar DefaultFilePrefix "JokesDb"
:setvar DefaultDataPath "/var/opt/mssql/data/"
:setvar DefaultLogPath "/var/opt/mssql/data/"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Dropping Default Constraint unnamed constraint on [dbo].[Jokes]...';


GO
ALTER TABLE [dbo].[Jokes] DROP CONSTRAINT [DF__Jokes__Rating__3E52440B];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_Jokes_To_Users]...';


GO
ALTER TABLE [dbo].[Jokes] DROP CONSTRAINT [FK_Jokes_To_Users];


GO
PRINT N'Dropping Foreign Key [dbo].[FK_JokesCategories_ToJokes]...';


GO
ALTER TABLE [dbo].[JokesCategories] DROP CONSTRAINT [FK_JokesCategories_ToJokes];


GO
PRINT N'Starting rebuilding table [dbo].[Jokes]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Jokes] (
    [Id]           INT            IDENTITY (1, 1) NOT NULL,
    [Title]        NVARCHAR (50)  NOT NULL,
    [Content]      NVARCHAR (MAX) NOT NULL,
    [IdUser]       INT            NOT NULL,
    [CreationDate] DATETIME       NOT NULL,
    [Rating]       TINYINT        DEFAULT 0 NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Jokes])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Jokes] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Jokes] ([Id], [Title], [Content], [IdUser], [CreationDate], [Rating])
        SELECT   [Id],
                 [Title],
                 [Content],
                 [IdUser],
                 [CreationDate],
                 [Rating]
        FROM     [dbo].[Jokes]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Jokes] OFF;
    END

DROP TABLE [dbo].[Jokes];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Jokes]', N'Jokes';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating Foreign Key [dbo].[FK_Jokes_To_Users]...';


GO
ALTER TABLE [dbo].[Jokes] WITH NOCHECK
    ADD CONSTRAINT [FK_Jokes_To_Users] FOREIGN KEY ([IdUser]) REFERENCES [dbo].[Users] ([Id]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_JokesCategories_ToJokes]...';


GO
ALTER TABLE [dbo].[JokesCategories] WITH NOCHECK
    ADD CONSTRAINT [FK_JokesCategories_ToJokes] FOREIGN KEY ([IdJoke]) REFERENCES [dbo].[Jokes] ([Id]);


GO
PRINT N'Refreshing View [dbo].[VuSersBlagues]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[VuSersBlagues]';


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Jokes] WITH CHECK CHECK CONSTRAINT [FK_Jokes_To_Users];

ALTER TABLE [dbo].[JokesCategories] WITH CHECK CHECK CONSTRAINT [FK_JokesCategories_ToJokes];


GO
PRINT N'Update complete.';


GO
